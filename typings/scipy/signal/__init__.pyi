# Minimal stub for scipy.signal to appease Pyright/Pylance
from typing import Any, Iterable
from numpy.typing import NDArray


def resample_poly(x: NDArray[Any], up: int, down: int, axis: int = ..., window: Any = ..., padtype: str = ..., cval: Any | None = ...) -> NDArray[Any]: ...

def butter(N: int, Wn: float | Iterable[float], btype: str = 'low', analog: bool = False, output: str = 'ba', fs: Any | None = None) -> tuple[NDArray[Any], NDArray[Any]]: ...

def filtfilt(b: NDArray[Any], a: NDArray[Any], x: NDArray[Any], axis: int = ..., padtype: str = ..., padlen: Any | None = ..., method: str = ..., irlen: Any | None = ...) -> NDArray[Any]: ...

def convolve(in1: NDArray[Any], in2: NDArray[Any], mode: str = 'full', method: str = 'auto') -> NDArray[Any]: ...

def hilbert(x: NDArray[Any], N: Any | None = None, axis: int = -1) -> NDArray[Any]: ...

def decimate(x: NDArray[Any], q: int, n: Any | None = None, ftype: str = 'iir', axis: int = -1, zero_phase: bool = True) -> NDArray[Any]: ...

def lfilter(b: NDArray[Any] | Iterable[float], a: NDArray[Any] | Iterable[float], x: NDArray[Any], axis: int = -1) -> NDArray[Any]: ...

# Expose the windows submodule (e.g., windows.tukey)
windows: Any
